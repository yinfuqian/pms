{"version":3,"file":"dayjs.min.js","sources":["src/constant.js","src/utils.js","src/index.js"],"sourcesContent":["export const SECONDS_A_MINUTE = 60\nexport const SECONDS_A_HOUR = SECONDS_A_MINUTE * 60\nexport const SECONDS_A_DAY = SECONDS_A_HOUR * 24\nexport const SECONDS_A_WEEK = SECONDS_A_DAY * 7\n\nexport const MILLISECONDS_A_SECOND = 1e3\nexport const MILLISECONDS_A_MINUTE = SECONDS_A_MINUTE * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_HOUR = SECONDS_A_HOUR * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_DAY = SECONDS_A_DAY * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_WEEK = SECONDS_A_WEEK * MILLISECONDS_A_SECOND\n\n// English locales\nexport const MS = 'millisecond'\nexport const S = 'second'\nexport const MIN = 'minute'\nexport const H = 'hour'\nexport const D = 'day'\nexport const W = 'week'\nexport const M = 'month'\nexport const Q = 'quarter'\nexport const Y = 'year'\nexport const DATE = 'date'\n\nexport const FORMAT_DEFAULT = 'YYYY-MM-DDTHH:mm:ssZ'\n\n// regex\nexport const REGEX_PARSE = /^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})(.*?(\\d{1,2}):(\\d{1,2}):(\\d{1,2}))?.?(\\d{1,3})?$/\nexport const REGEX_FORMAT = /\\[.*?\\]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\n\nexport const en = {\n  name: 'en',\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_')\n}\n","import * as C from './constant'\n\nconst padStart = (string, length, pad) => {\n  const s = String(string)\n  if (!s || s.length >= length) return string\n  return `${Array((length + 1) - s.length).join(pad)}${string}`\n}\n\nconst padZoneStr = (negMinuts) => {\n  const minutes = Math.abs(negMinuts)\n  const hourOffset = Math.floor(minutes / 60)\n  const minuteOffset = minutes % 60\n  return `${negMinuts <= 0 ? '+' : '-'}${padStart(hourOffset, 2, '0')}:${padStart(minuteOffset, 2, '0')}`\n}\n\nconst monthDiff = (a, b) => {\n  // function from moment.js in order to keep the same result\n  const wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month())\n  const anchor = a.clone().add(wholeMonthDiff, 'months')\n  const c = b - anchor < 0\n  const anchor2 = a.clone().add(wholeMonthDiff + (c ? -1 : 1), 'months')\n  // eslint-disable-next-line\n  const diff = Number(-(wholeMonthDiff + ((b - anchor) / (c ? (anchor - anchor2) : (anchor2 - anchor)))))\n  if (Math.abs(diff) === 0) {\n    return 0\n  }\n  return diff\n}\n\nconst absFloor = n => (n < 0 ? Math.ceil(n) || 0 : Math.floor(n))\n\nconst prettyUnit = (u) => {\n  const special = {\n    M: C.M,\n    y: C.Y,\n    w: C.W,\n    d: C.D,\n    h: C.H,\n    m: C.MIN,\n    s: C.S,\n    ms: C.MS\n  }\n  return special[u] || String(u || '').toLowerCase().replace(/s$/, '')\n}\n\nconst isUndefined = s => s === undefined\n\nexport default {\n  padStart,\n  padZoneStr,\n  monthDiff,\n  absFloor,\n  prettyUnit,\n  isUndefined\n}\n","import * as C from './constant'\nimport U from './utils'\n\nlet L = 'en' // global locale\nconst Ls = {} // global loaded locale\nLs[L] = C.en\n\nconst isDayjs = d => d instanceof Dayjs // eslint-disable-line no-use-before-define\n\nconst parseLocale = (preset, object, isLocal) => {\n  let l\n  if (!preset) return null\n  if (typeof preset === 'string') {\n    if (Ls[preset]) {\n      l = preset\n    }\n    if (object) {\n      Ls[preset] = object\n      l = preset\n    }\n  } else {\n    const { name } = preset\n    Ls[name] = preset\n    l = name\n  }\n  if (!isLocal) L = l\n  return l\n}\n\nconst getLocale = (locale) => {\n  if (typeof locale === 'string') {\n    // Get locale by its name.\n    return Ls[locale]\n  }\n  if (locale) {\n    // Register a locale object by its name.\n    const { name } = locale\n    Ls[name] = locale\n  } else {\n    // Get the de4fault locale.\n    locale = Ls[L]\n  }\n  return locale\n}\n\nconst dayjs = (date, c) => {\n  if (isDayjs(date)) {\n    if (c) {\n      date = date.toDate()\n    } else {\n      return date.clone()\n    }\n  }\n  const cfg = c || {}\n  if (date instanceof Date && cfg.cloneDate !== false) {\n    date = new Date(date)\n  }\n  cfg.date = date\n  return new Dayjs(cfg) // eslint-disable-line no-use-before-define\n}\n\nconst wrapper = (date, instance, cloneDate) =>\n  dayjs(date, { locale: instance.$L, utc: instance.$u, cloneDate })\n\nconst Utils = U // for plugin use\nUtils.parseLocale = parseLocale\nUtils.getLocale = getLocale\nUtils.isDayjs = isDayjs\nUtils.wrapper = wrapper\n\nconst parseDate = (cfg) => {\n  const { date } = cfg\n  let reg\n  if (date === null) return new Date(NaN) // Treat null as an invalid date\n  if (Utils.isUndefined(date)) return new Date()\n  if (date instanceof Date) return date\n  // eslint-disable-next-line no-cond-assign\n  if ((typeof date === 'string')\n    && (date.charCodeAt(date.length - 1) <= 57) // Must end with number, not Z\n    && (reg = date.match(C.REGEX_PARSE))) {\n    // 2018-08-08 or 20180808\n    const year = reg[1]\n    const month = reg[2] - 1\n    const day = reg[3] || 1\n    const hours = reg[5] || 0\n    const minutes = reg[6] || 0\n    const seconds = reg[7] || 0\n    const milliseconds = reg[8] || 0\n    return cfg && cfg.utc\n      ? new Date(Date.UTC(year, month, day, hours, minutes, seconds, milliseconds))\n      : new Date(year, month, day, hours, minutes, seconds, milliseconds)\n  }\n  return new Date(date) // timestamp\n}\n\nclass Dayjs {\n  constructor(cfg) {\n    this.parse(cfg) // for plugin\n  }\n\n  parse(cfg) {\n    this.$d = parseDate(cfg)\n    this.init(cfg)\n  }\n\n  init(cfg) {\n    const utc = cfg && !!cfg.utc\n    const date = this.$d\n    this.$u = utc\n    if (utc) {\n      this.$y = date.getUTCFullYear()\n      this.$M = date.getUTCMonth()\n      this.$D = date.getUTCDate()\n      this.$W = date.getUTCDay()\n      this.$H = date.getUTCHours()\n      this.$m = date.getUTCMinutes()\n      this.$s = date.getUTCSeconds()\n      this.$ms = date.getUTCMilliseconds()\n    } else {\n      this.$y = date.getFullYear()\n      this.$M = date.getMonth()\n      this.$D = date.getDate()\n      this.$W = date.getDay()\n      this.$H = date.getHours()\n      this.$m = date.getMinutes()\n      this.$s = date.getSeconds()\n      this.$ms = date.getMilliseconds()\n    }\n    this.$L = this.$L || parseLocale(cfg.locale, null, true) || L\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  $utils() {\n    return Utils\n  }\n\n  isValid() {\n    return !(this.$d.toString() === 'Invalid Date')\n  }\n\n  $compare(that) {\n    return this.valueOf() - dayjs(that).valueOf()\n  }\n\n  isSame(that) {\n    return this.$compare(that) === 0\n  }\n\n  isBefore(that) {\n    return this.$compare(that) < 0\n  }\n\n  isAfter(that) {\n    return this.$compare(that) > 0\n  }\n\n  year() {\n    return this.$y\n  }\n\n  month() {\n    return this.$M\n  }\n\n  day() {\n    return this.$W\n  }\n\n  date() {\n    return this.$D\n  }\n\n  hour() {\n    return this.$H\n  }\n\n  minute() {\n    return this.$m\n  }\n\n  second() {\n    return this.$s\n  }\n\n  millisecond() {\n    return this.$ms\n  }\n\n  unix() {\n    return Math.floor(this.valueOf() / 1000)\n  }\n\n  valueOf() {\n    // timezone(hour) * 60 * 60 * 1000 => ms\n    return this.$d.getTime()\n  }\n\n  startOf(units, startOf) { // startOf -> endOf\n    const isStartOf = !Utils.isUndefined(startOf) ? startOf : true\n    const unit = Utils.prettyUnit(units)\n    const setMethods = this.$u\n      ? ['setUTCHours', 'setUTCMinutes', 'setUTCSeconds', 'setUTCMilliseconds']\n      : ['setHours', 'setMinutes', 'setSeconds', 'setMilliseconds']\n    const instanceFactory = (d, m) => {\n      const date = this.$u\n        ? new Date(Date.UTC(this.$y, m, d))\n        : new Date(this.$y, m, d)\n      const ins = wrapper(date, this, false)\n      return isStartOf ? ins : ins.endOf(C.D)\n    }\n    const instanceFactorySet = (slice) => {\n      const argumentStart = [0, 0, 0, 0]\n      const argumentEnd = [23, 59, 59, 999]\n      const date = this.toDate()\n      return wrapper(date[setMethods[slice]].apply( // eslint-disable-line prefer-spread\n        date,\n        isStartOf ? argumentStart.slice(slice) : argumentEnd.slice(slice)\n      ), this, false)\n    }\n    switch (unit) {\n      case C.Y:\n        return isStartOf ? instanceFactory(1, 0) :\n          instanceFactory(31, 11)\n      case C.M:\n        return isStartOf ? instanceFactory(1, this.$M) :\n          instanceFactory(0, this.$M + 1)\n      case C.W:\n        return isStartOf ? instanceFactory(this.$D - this.$W, this.$M) :\n          instanceFactory(this.$D + (6 - this.$W), this.$M)\n      case C.D:\n      case C.DATE:\n        return instanceFactorySet(0)\n      case C.H:\n        return instanceFactorySet(1)\n      case C.MIN:\n        return instanceFactorySet(2)\n      case C.S:\n        return instanceFactorySet(3)\n      default:\n        return this.clone()\n    }\n  }\n\n  endOf(arg) {\n    return this.startOf(arg, false)\n  }\n\n  $set(units, int) { // private set\n    const unit = Utils.prettyUnit(units)\n    const setMethods = this.$u\n      ? {\n        year: 'setUTCFullYear',\n        month: 'setUTCMonth',\n        date: 'setUTCDate',\n        hours: 'setUTCHours',\n        minutes: 'setUTCMinutes',\n        seconds: 'setUTCSeconds',\n        milliseconds: 'setUTCMilliseconds'\n      }\n      : {\n        year: 'setFullYear',\n        month: 'setMonth',\n        date: 'setDate',\n        hours: 'setHours',\n        minutes: 'setMinutes',\n        seconds: 'setSeconds',\n        milliseconds: 'setMilliseconds'\n      }\n    switch (unit) {\n      case C.D:\n        this.$d[setMethods.date](this.$D + (int - this.$W))\n        break\n      case C.DATE:\n        this.$d[setMethods.date](int)\n        break\n      case C.M:\n        this.$d[setMethods.month](int)\n        break\n      case C.Y:\n        this.$d[setMethods.year](int)\n        break\n      case C.H:\n        this.$d[setMethods.hours](int)\n        break\n      case C.MIN:\n        this.$d[setMethods.minutes](int)\n        break\n      case C.S:\n        this.$d[setMethods.seconds](int)\n        break\n      case C.MS:\n        this.$d[setMethods.milliseconds](int)\n        break\n      default:\n        break\n    }\n    this.init()\n    return this\n  }\n\n  set(string, int) {\n    return this.clone().$set(string, int)\n  }\n\n  add(number, units) {\n    number = Number(number) // eslint-disable-line no-param-reassign\n    const unit = Utils.prettyUnit(units)\n    const instanceFactory = (u, n) => {\n      const date = this.set(C.DATE, 1).set(u, n + number)\n      return date.set(C.DATE, Math.min(this.$D, date.daysInMonth()))\n    }\n    const instanceFactorySet = (n) => {\n      const date = new Date(this.$d)\n      date.setDate(date.getDate() + (n * number))\n      return wrapper(date, this)\n    }\n    if (unit === C.M) {\n      return instanceFactory(C.M, this.$M)\n    }\n    if (unit === C.Y) {\n      return instanceFactory(C.Y, this.$y)\n    }\n    if (unit === C.D) {\n      return instanceFactorySet(1)\n    }\n    if (unit === C.W) {\n      return instanceFactorySet(7)\n    }\n    let step\n    switch (unit) {\n      case C.MIN:\n        step = C.MILLISECONDS_A_MINUTE\n        break\n      case C.H:\n        step = C.MILLISECONDS_A_HOUR\n        break\n      case C.S:\n        step = C.MILLISECONDS_A_SECOND\n        break\n      default: // ms\n        step = 1\n    }\n    const nextTimeStamp = this.valueOf() + (number * step)\n    return wrapper(nextTimeStamp, this)\n  }\n\n  subtract(number, string) {\n    return this.add(number * -1, string)\n  }\n\n  format(formatStr) {\n    const str = formatStr || C.FORMAT_DEFAULT\n    const zoneStr = this.$u ? '+00:00' : Utils.padZoneStr(this.$d.getTimezoneOffset())\n    const locale = this.$locale()\n    const {\n      weekdays, months\n    } = locale\n    const getShort = (arr, index, full, length) => (\n      (arr && arr[index]) || full[index].substr(0, length)\n    )\n    return str.replace(C.REGEX_FORMAT, (match) => {\n      if (match.indexOf('[') > -1) return match.replace(/\\[|\\]/g, '')\n      switch (match) {\n        case 'YY':\n          return String(this.$y).slice(-2)\n        case 'YYYY':\n          return String(this.$y)\n        case 'M':\n          return String(this.$M + 1)\n        case 'MM':\n          return Utils.padStart(this.$M + 1, 2, '0')\n        case 'MMM':\n          return getShort(locale.monthsShort, this.$M, months, 3)\n        case 'MMMM':\n          return months[this.$M]\n        case 'D':\n          return String(this.$D)\n        case 'DD':\n          return Utils.padStart(this.$D, 2, '0')\n        case 'd':\n          return String(this.$W)\n        case 'dd':\n          return getShort(locale.weekdaysMin, this.$W, weekdays, 2)\n        case 'ddd':\n          return getShort(locale.weekdaysShort, this.$W, weekdays, 3)\n        case 'dddd':\n          return weekdays[this.$W]\n        case 'H':\n          return String(this.$H)\n        case 'HH':\n          return Utils.padStart(this.$H, 2, '0')\n        case 'h':\n        case 'hh':\n          if (this.$H === 0) return 12\n          return Utils.padStart(this.$H < 13 ? this.$H : this.$H - 12, match === 'hh' ? 2 : 1, '0')\n        case 'a':\n          return this.$H < 12 ? 'am' : 'pm'\n        case 'A':\n          return this.$H < 12 ? 'AM' : 'PM'\n        case 'm':\n          return String(this.$m)\n        case 'mm':\n          return Utils.padStart(this.$m, 2, '0')\n        case 's':\n          return String(this.$s)\n        case 'ss':\n          return Utils.padStart(this.$s, 2, '0')\n        case 'SSS':\n          return Utils.padStart(this.$ms, 3, '0')\n        case 'Z':\n          return zoneStr\n        default: // 'ZZ'\n          return zoneStr.replace(':', '')\n      }\n    })\n  }\n\n  diff(input, units, float) {\n    const unit = Utils.prettyUnit(units)\n    const that = dayjs(input)\n    const diff = this - that\n    let result = Utils.monthDiff(this, that)\n    switch (unit) {\n      case C.Y:\n        result /= 12\n        break\n      case C.M:\n        break\n      case C.Q:\n        result /= 3\n        break\n      case C.W:\n        result = diff / C.MILLISECONDS_A_WEEK\n        break\n      case C.D:\n        result = diff / C.MILLISECONDS_A_DAY\n        break\n      case C.H:\n        result = diff / C.MILLISECONDS_A_HOUR\n        break\n      case C.MIN:\n        result = diff / C.MILLISECONDS_A_MINUTE\n        break\n      case C.S:\n        result = diff / C.MILLISECONDS_A_SECOND\n        break\n      default: // milliseconds\n        result = diff\n    }\n    return float ? result : Utils.absFloor(result)\n  }\n\n  daysInMonth() {\n    return this.endOf(C.M).$D\n  }\n\n  $locale() { // get locale object\n    return Ls[this.$L]\n  }\n\n  locale(preset, object) {\n    const that = this.clone()\n    that.$L = parseLocale(preset, object, true)\n    return that\n  }\n\n  clone() {\n    return wrapper(this.toDate(), this, false)\n  }\n\n  toDate() {\n    return new Date(this.$d)\n  }\n\n  toArray() {\n    return [\n      this.$y,\n      this.$M,\n      this.$D,\n      this.$H,\n      this.$m,\n      this.$s,\n      this.$ms\n    ]\n  }\n\n  toJSON() {\n    return this.toISOString()\n  }\n\n  toISOString() {\n    // ie 8 return\n    // new Dayjs(this.valueOf() + this.$d.getTimezoneOffset() * 60000)\n    // .format('YYYY-MM-DDTHH:mm:ss.SSS[Z]')\n    return this.$d.toISOString()\n  }\n\n  toObject() {\n    return {\n      years: this.$y,\n      months: this.$M,\n      date: this.$D,\n      hours: this.$H,\n      minutes: this.$m,\n      seconds: this.$s,\n      milliseconds: this.$ms\n    }\n  }\n\n  toString() {\n    return this.$d.toUTCString()\n  }\n\n  isUTC() {\n    return this.$u\n  }\n\n  utc() {\n    return dayjs(this.$d.valueOf(), { locale: this.$L, utc: true })\n  }\n\n  local() {\n    return dayjs(this.$d.valueOf(), { locale: this.$L, utc: false })\n  }\n\n  utcOffset() {\n    return this.$u ? 0 : this.$d.getTimezoneOffset()\n  }\n}\n\ndayjs.prototype = Dayjs.prototype\n\ndayjs.utc = (date, c) => {\n  const cfg = { ...c, utc: true }\n  return dayjs(date, cfg)\n}\n\ndayjs.extend = (plugin, option) => {\n  plugin(option, Dayjs, dayjs)\n  return dayjs\n}\n\ndayjs.locale = parseLocale\n\ndayjs.isDayjs = isDayjs\n\ndayjs.unix = timestamp => (\n  dayjs(timestamp * 1e3)\n)\n\ndayjs.en = Ls[L]\n\nexport default dayjs\n"],"names":["MILLISECONDS_A_SECOND","MS","S","MIN","H","D","W","M","Y","DATE","REGEX_PARSE","REGEX_FORMAT","en","name","weekdays","split","months","padStart","string","length","pad","s","String","Array","join","padZoneStr","negMinuts","minutes","Math","abs","hourOffset","floor","minuteOffset","monthDiff","a","b","wholeMonthDiff","year","month","anchor","clone","add","c","anchor2","diff","Number","absFloor","n","ceil","prettyUnit","u","C","y","w","d","h","m","ms","toLowerCase","replace","isUndefined","undefined","L","Ls","isDayjs","Dayjs","parseLocale","preset","object","isLocal","l","dayjs","date","toDate","cfg","Date","cloneDate","wrapper","instance","locale","$L","utc","$u","Utils","U","getLocale","parse","$d","reg","NaN","charCodeAt","match","day","hours","seconds","milliseconds","UTC","parseDate","init","this","$ms","$y","getUTCFullYear","$M","getUTCMonth","$D","getUTCDate","$W","getUTCDay","$H","getUTCHours","$m","getUTCMinutes","$s","getUTCSeconds","getUTCMilliseconds","getFullYear","getMonth","getDate","getDay","getHours","getMinutes","getSeconds","getMilliseconds","$utils","isValid","toString","$compare","that","valueOf","isSame","isBefore","isAfter","hour","minute","second","millisecond","unix","getTime","startOf","units","isStartOf","unit","setMethods","instanceFactory","_this","ins","endOf","instanceFactorySet","slice","apply","arg","$set","int","set","number","step","_this2","min","daysInMonth","setDate","SECONDS_A_MINUTE","SECONDS_A_HOUR","nextTimeStamp","subtract","format","formatStr","str","zoneStr","getTimezoneOffset","$locale","getShort","arr","index","full","substr","indexOf","_this3","monthsShort","weekdaysMin","weekdaysShort","input","float","result","SECONDS_A_WEEK","SECONDS_A_DAY","toArray","toJSON","toISOString","toObject","years","toUTCString","isUTC","local","utcOffset","prototype","extend","plugin","option","timestamp"],"mappings":"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"}