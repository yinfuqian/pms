{"version":3,"file":"advancedFormat.js","sources":["../src/plugin/advancedFormat/index.js","../src/constant.js"],"sourcesContent":["import { FORMAT_DEFAULT } from '../../constant'\n\nexport default (o, c, d) => { // locale needed later\n  const proto = c.prototype\n  const oldFormat = proto.format\n  d.en.ordinal = (number) => {\n    const s = ['th', 'st', 'nd', 'rd']\n    const v = number % 100\n    return `[${number}${(s[(v - 20) % 10] || s[v] || s[0])}]`\n  }\n  // extend en locale here\n  proto.format = function (formatStr) {\n    const locale = this.$locale()\n    const utils = this.$utils()\n    const str = formatStr || FORMAT_DEFAULT\n    const result = str.replace(/Q|Do|X|x|k{1,2}|S/g, (match) => {\n      switch (match) {\n        case 'Q':\n          return Math.ceil((this.$M + 1) / 3)\n        case 'Do': {\n          return locale.ordinal(this.$D)\n        }\n        case 'k':\n        case 'kk':\n          return utils.padStart(String(this.$H === 0 ? 24 : this.$H), match === 'k' ? 1 : 2, '0')\n        case 'X':\n          return Math.floor(this.$d.getTime() / 1000)\n        default: // 'x'\n          return this.$d.getTime()\n      }\n    })\n    return oldFormat.bind(this)(result)\n  }\n}\n","export const SECONDS_A_MINUTE = 60\nexport const SECONDS_A_HOUR = SECONDS_A_MINUTE * 60\nexport const SECONDS_A_DAY = SECONDS_A_HOUR * 24\nexport const SECONDS_A_WEEK = SECONDS_A_DAY * 7\n\nexport const MILLISECONDS_A_SECOND = 1e3\nexport const MILLISECONDS_A_MINUTE = SECONDS_A_MINUTE * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_HOUR = SECONDS_A_HOUR * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_DAY = SECONDS_A_DAY * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_WEEK = SECONDS_A_WEEK * MILLISECONDS_A_SECOND\n\n// English locales\nexport const MS = 'millisecond'\nexport const S = 'second'\nexport const MIN = 'minute'\nexport const H = 'hour'\nexport const D = 'day'\nexport const W = 'week'\nexport const M = 'month'\nexport const Q = 'quarter'\nexport const Y = 'year'\nexport const DATE = 'date'\n\nexport const FORMAT_DEFAULT = 'YYYY-MM-DDTHH:mm:ssZ'\n\n// regex\nexport const REGEX_PARSE = /^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})(.*?(\\d{1,2}):(\\d{1,2}):(\\d{1,2}))?.?(\\d{1,3})?$/\nexport const REGEX_FORMAT = /\\[.*?\\]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\n\nexport const en = {\n  name: 'en',\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_')\n}\n"],"names":["o","c","d","proto","prototype","oldFormat","format","en","ordinal","number","s","v","formatStr","locale","this","$locale","utils","$utils","result","replace","match","Math","ceil","_this","$M","$D","padStart","String","$H","floor","$d","getTime","bind"],"mappings":"uNAEgBA,EAAGC,EAAGC,OACdC,EAAQF,EAAEG,UACVC,EAAYF,EAAMG,OACxBJ,EAAEK,GAAGC,QAAU,SAACC,OACRC,EAAI,CAAC,KAAM,KAAM,KAAM,MACvBC,EAAIF,EAAS,cACRA,GAAUC,GAAGC,EAAI,IAAM,KAAOD,EAAEC,IAAMD,EAAE,SAGrDP,EAAMG,OAAS,SAAUM,cACjBC,EAASC,KAAKC,UACdC,EAAQF,KAAKG,SAEbC,GADMN,GCSc,wBDRPO,QAAQ,qBAAsB,SAACC,UACxCA,OACD,WACIC,KAAKC,MAAMC,EAAKC,GAAK,GAAK,OAC9B,YACIX,EAAOL,QAAQe,EAAKE,QAExB,QACA,YACIT,EAAMU,SAASC,OAAmB,IAAZJ,EAAKK,GAAW,GAAKL,EAAKK,IAAe,MAAVR,EAAgB,EAAI,EAAG,SAChF,WACIC,KAAKQ,MAAMN,EAAKO,GAAGC,UAAY,oBAE/BR,EAAKO,GAAGC,oBAGd1B,EAAU2B,KAAKlB,KAAfT,CAAqBa"}